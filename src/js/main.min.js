const body=document.querySelector("body");btnSave=document.querySelector("#createLeiding"),btnRmv=document.querySelector("#removeLeiding"),inpSaveLeidingNaam=document.querySelector("#leidingNaam"),inpSaveLeidingBedrag=document.querySelector("#leidingBedrag"),buttons=document.querySelector(".buttons"),tableLeiding=document.querySelector("#tableLeiding"),bordContent=document.querySelector("#home > div > div:nth-child(2)"),inpTopUp=document.querySelector("#topUpAmount"),errorNewLeiding=document.querySelector("#errorNewLeiding"),inpDrankNaam=document.querySelector("#drankNaam"),inpDrankMix=document.querySelector("#inputDrankMix"),inpDrankAmount=document.querySelector("#inpDrankAmount"),inpDrankAmount2=document.querySelector("#inpDrankAmount2"),inpDrankAmount3=document.querySelector("#inpDrankAmount3"),inpDrankColor=document.querySelector("#inpDrankColor"),inpAdminPassw=document.querySelector("#inpAdminPassword"),inpChangePassword=document.querySelector("#inpChangePassword"),cookieSudo=readCookie("sudo");const now=new Date,dd=now.getDate(),mm=now.getMonth(),yyyy=now.getFullYear(),hh=now.getHours(),nn=now.getMinutes();let leiding=[],hasToPay="",personIndex,selectedDrank,selectedDrankAmount,selectedDrankIsMix,selectedDrankMix,leidingCurrentAmount,newAmount,intrest=2,leidingTegoed=TAFFY().store("leiding-tegoed"),records=TAFFY().store("records"),dranken=TAFFY().store("dranken"),adminPassword=TAFFY().store("password"),adminPasswordDefault=a("stamvader"),adminLoggedIn=!1,newAdminPassword,toastIndex=0;function initiate(){btnSave.addEventListener("click",()=>{""==inpSaveLeidingNaam.value||""==inpSaveLeidingBedrag.value?(console.log("lol"),errorNewLeiding.classList.remove("d-none")):(errorNewLeiding.classList.remove("d-none"),errorNewLeiding.classList.add("d-none"),leidingTegoed.insert({name:inpSaveLeidingNaam.value,amount:inpSaveLeidingBedrag.value}),generateUI())}),testLeidingExists(),generateUI(),generateRecords(),generateDrank(),generateListDranken(),feather.replace()}function testLeidingExists(){0==leidingTegoed().count()?(document.querySelector("#home > div > div:nth-child(2)").classList.add("d-none"),document.querySelector("#notifNoLeiding").classList.remove("d-none")):(document.querySelector("#notifNoLeiding").classList.add("d-none"),document.querySelector("#home > div > div:nth-child(2)").classList.add("d-none"),document.querySelector("#home > div > div:nth-child(2)").classList.remove("d-none"))}function generateUI(){let tempStr="",tableTempStr="";leidingTegoed().order("name asec").each(el=>{leidingCurrentAmount=el.amount,tempStr+=`\n            <button class="btn btn-primary txt-item flex-grid-item" onclick="selectPerson('${el.name}', '${el.amount}')">${el.name}</button>\n        `,tableTempStr+=`\n        <tr>\n            <td>${el.name}</td>\n            <td>${amount2Eur(el.amount)}</td>\n            <td>\n                <button class="btn btn-info mr-2" onclick="topUp('${el.name}', ${el.amount})"><i data-feather="dollar-sign"></i>Topup</button>\n                <button class="btn btn-danger no-txt" onclick="removePerson('${el.name}')"><i data-feather="trash-2"></i></button>\n            </td>\n        </tr>\n        `}),buttons.innerHTML=tempStr,tableLeiding.innerHTML=tableTempStr,testLeidingExists(),feather.replace()}function selectPerson(n,e){hasToPay=n,currentAmount=e,console.log(`has to pay: ${hasToPay}`),currentAmount<=1&&document.querySelector("#notifCurrentAmount").classList.remove("d-none"),currentAmount>1&&(document.querySelector("#notifCurrentAmount").classList.remove("d-none"),document.querySelector("#notifCurrentAmount").classList.add("d-none")),document.querySelector("#selectDrank").classList.remove("d-none"),showCurrentAmount(currentAmount),document.querySelector("#selectDrank").scrollIntoView(),document.querySelector("#home").classList.add("spacing-r")}function removePerson(n){console.log(`remove: ${n}`),leidingTegoed({name:n}).remove(),generateUI(),createToast("Persoon verwijderd",`${n} werd verwijderd uit de database`)}function selectAmount(n){intrest=currentAmount<=.8?1.03:1;let nOutput="";switch(n){case 0:nOutput="enkel";break;case 1:nOutput="dubbel";break;case 2:nOutput="extra"}let mixOutput="";switch(n){case 1:mixOutput="fris";break;case 2:mixOutput="fristi / fruitsap"}document.querySelector("#selectContent").classList.add("d-none"),document.querySelector("#selectDrank").classList.add("d-none"),document.querySelector("#showCurrentAmount").classList.add("d-none"),document.querySelector("#notifCurrentAmount").classList.add("d-none"),console.log(`amount selected: ${n}`),1==selectedDrankIsMix?(newAmount=currentAmount-selectedDrankAmount[n]*intrest,records.insert({date:(new Date).toLocaleString("en-GB",{timeZone:"UTC"}),name:hasToPay,amount:selectedDrankAmount[n]*intrest,drank:selectedDrank+` (${nOutput} + ${mixOutput})`})):0==selectedDrankIsMix&&(newAmount=currentAmount-selectedDrankAmount*intrest,records.insert({date:(new Date).toLocaleString("en-GB",{timeZone:"UTC"}),name:hasToPay,amount:selectedDrankAmount*intrest,drank:selectedDrank})),leidingTegoed({name:hasToPay}).update({amount:newAmount}),document.querySelector("#home").scrollIntoView(),document.querySelector("#home").classList.remove("spacing-r"),initiate()}function selectDrink(amount,n,mix){selectedDrank=n,selectedDrankAmount=amount,selectedDrankMix=mix,0==mix?(console.log("selectDrink item not cocktail"),selectedDrankIsMix=!1):(selectedDrankIsMix=!0,document.querySelector("#selectContent > div > div > div > button:nth-child(2)").classList.remove("d-none"),document.querySelector("#selectContent > div > div > div > button:nth-child(3)").classList.remove("d-none")),console.log(`price selected is ${selectedDrankAmount}`),document.querySelector("#selectContent").classList.remove("d-none"),document.querySelector("#selectContent").scrollIntoView()}function showCurrentAmount(e){document.querySelector(".showCurrentAmount").innerHTML=amount2Eur(e),document.querySelector("#showCurrentAmount").classList.remove("d-none")}function addDrank(){console.log(`add drank: ${inpDrankNaam.value} €${inpDrankAmount.value} ${inpDrankMix.value}`),"0"!=inpDrankMix.value?(console.log("cocktail toegevoegd"),dranken.insert({name:inpDrankNaam.value,amount:[inpDrankAmount.value,inpDrankAmount2.value,inpDrankAmount3.value],mix:inpDrankMix.value,color:inpDrankColor.value})):(console.log("fris/bier toegevoegd"),dranken.insert({name:inpDrankNaam.value,amount:inpDrankAmount.value,mix:inpDrankMix.value,color:inpDrankColor.value})),generateDrank(),generateListDranken(),feather.replace(),createToast("Item toegevoegd",`${inpDrankNaam.value} toegevoegd aan database`)}function removeDrank(n){console.log(`remove: ${n}`),dranken({name:n}).remove(),generateDrank(),feather.replace()}function generateDrank(){tempStr="",dranken().order("name asec").each(r=>{let calcAMount=parseFloat(r.amount[0])+parseFloat(r.amount[1])+parseFloat(r.amount[2]);d=calcAMount>=0?`<strong>Enkel</strong> ${amount2Eur(r.amount[0])} <strong class="ml-3">Dubbel</strong> ${amount2Eur(r.amount[1])} <strong class="ml-3">Halve</strong> ${amount2Eur(r.amount[2])}`:`${amount2Eur(r.amount)}`,tempStr+=`\n        <tr>\n            <td>${r.name}</td>\n            <td>${d}</td>\n            <td>${inputMix2String(r.mix)}</td>\n            <td><div class="drank-color-tag" style="background-color: ${r.color}"></div></td>\n            <td><button class="btn btn-danger no-txt" onclick="removeDrank('${r.name}')"><i data-feather="trash-2"></i></button></td>\n        </tr>\n        `}),document.querySelector("#tableDrank").innerHTML=tempStr}function generateListDranken(){tempStr="",dranken().order("name asec").each(r=>{let calcAMount=parseFloat(r.amount[0])+parseFloat(r.amount[1])+parseFloat(r.amount[2]);d=calcAMount>=0?`${r.amount[0]}, ${r.amount[1]}, ${r.amount[2]}`:r.amount,tempStr+=`\n        <button style="background-color: ${r.color} !important; border: none;" class="btn btn-primary txt-item flex-grid-item" onclick="selectDrink([${d}],'${r.name}', ${r.mix})"><span class="d-block">${r.name}</span><span class="d-block">${inputMix2String(r.mix)}</span></button>\n        `}),document.querySelector("#listDranken").innerHTML=tempStr}function topUp(p,e){newAmount=e+parseFloat(inpTopUp.value),console.log("topup person "+p),console.log("input value "+inpTopUp.value),console.log("current amount "+parseFloat(e)),console.log("new amount "+newAmount),leidingTegoed({name:p}).update({amount:newAmount}),initiate(),createToast("Topup",`Er werd €${inpTopUp.value} opgeladen voor ${p}`)}function generateRecords(){tempStr="",records().order("date desc").each(r=>{tempStr+=`\n        <tr>\n            <td>${r.date}</td>\n            <td>${r.name}</td>\n            <td>${r.drank}</td>\n            <td>${amount2Eur(r.amount)}</td>\n        </tr>\n        `}),document.querySelector("#tableRecords").innerHTML=tempStr}function save(){let tempStr1="";records().each((function(r){tempStr1+=`,\n    {\n        "date": "${r.date}",\n        "name": "${r.name}",\n        "drank": "${r.drank.replace(".",",")}",\n        "amount": ${r.amount}\n    }`}));const file1=`\n        [${tempStr1.slice(3)}]\n    `,blob1=new Blob([file1],{type:"application/javascript"});saveAs(blob1,`backup_records_${dd}${mm}${yyyy}_${hh}${nn}.js`);let tempStr2="";leidingTegoed().each((function(r){tempStr2+=`,\n    {\n        "name": "${r.name}",\n        "amount": ${r.amount}\n    }`}));const file2=`\n        [${tempStr2.slice(3)}]\n    `,blob2=new Blob([file2],{type:"application/javascript"});saveAs(blob2,`backup_leiding_${dd}${mm}${yyyy}_${hh}${nn}.js`);let tempStr3="";dranken().each((function(r){let calcAMount=parseFloat(r.amount[0])+parseFloat(r.amount[1])+parseFloat(r.amount[2]);d=calcAMount>=0?`[${r.amount[0]}, ${r.amount[1]}, ${r.amount[2]}]`:`"${r.amount}"`,tempStr3+=`,\n    {\n        "name": "${r.name}",\n        "amount": ${r.amount},\n        "mix": ${d},\n        "color": "${r.color}"\n    }`}));const file3=`\n        [${tempStr3.slice(3)}]\n    `,blob3=new Blob([file3],{type:"application/javascript"});saveAs(blob3,`backup_drank_${dd}${mm}${yyyy}_${hh}${nn}.js`)}function logInAdmin(){a(inpAdminPassword.value)==adminPasswordDefault&&null==readCookie("adpw")?(console.log("admin logged in"),body.setAttribute("data-admin-login",!0),goSudo(!0)):a(inpAdminPassword.value)==getCookie("adpw")?(console.log("admin logged in"),body.setAttribute("data-admin-login",!0),goSudo(!0)):(console.log("password false"),createToast("Wachtwoord","Het opgegeven wachtwoord is fout")),inpAdminPassword.value="",generateDrank(),feather.replace()}function logOffAdmin(){console.log("admin logged off"),body.setAttribute("data-admin-login",!1),goSudo(!1)}function saveAdminPassword(){newAdminPassword=inpChangePassword.value,console.log(`new password registered: ${newAdminPassword} = ${a(newAdminPassword)}`),createCookie("adpw",a(newAdminPassword)),inpChangePassword.value="",createToast("Wachtwoord","Het nieuwe wachtwoord werd opgeslagen.")}function loadFile(){var input,file,fr;if("function"!=typeof window.FileReader)return void createToast("Backup import","The file API isn't supported on this browser yet.");let filename=(input=document.getElementById("fileinput")).value.split("\\").pop();function receivedText(e){let lines=e.target.result;var newArr=JSON.parse(lines);if(filename.includes("records"))records().remove(),newArr.forEach(r=>{console.log(r.date+" "+r.amount),records.insert({date:r.date,name:r.name,amount:r.amount,drank:r.drank})});else if(filename.includes("leiding"))leidingTegoed().remove(),newArr.forEach(r=>{console.log(r.name+" "+r.amount),leidingTegoed.insert({name:r.name,amount:r.amount})});else if(filename.includes("drank")){let tempStr;dranken().remove(),newArr.forEach(r=>{console.log(`${r.name} ${r.amount} ${r.mix} ${r.color}`),dranken.insert({name:r.name,amount:r.amount,mix:r.mix,color:r.color})})}else filename.includes("test")&&console.log(`newArr = ${lines}`);initiate()}input?input.files?input.files[0]?(file=input.files[0],(fr=new FileReader).onload=receivedText,fr.readAsText(file),createToast("Backup import","Inladen bestand en terugzetten gegevens gelukt")):createToast("Backup import","Kies eerst een bestand voor op 'Inladen' te klikken"):createToast("Backup import","Deze browser ondersteund deze functie niet"):createToast("Backup import","Fout bij het importeren")}function removeDBRecords(){records().remove(),initiate(),createToast("Database records","Records werden verwijderd")}function removeDBLeiding(){leidingTegoed().remove(),initiate(),createToast("Database leiding","Leiding werd verwijderd")}function removeDBDranken(){dranken().remove(),initiate(),createToast("Database dranken","Dranken werden verwijderd")}function amount2Eur(n){const type=typeof n;if(null!==n||"null"!==n&&"string"==type)return`€ ${parseFloat(n.toString()).toFixed(2).toString().replace(".",",")}`}function inputMix2String(n){let d="";switch(n){case"1":d="Fris";break;case"2":d="Fristi / fruitsap"}return d}function createToast(title,message){let toast=document.createElement("div");toastIndex++,toast.classList.add("toast","animated","fadeInRight","faster"),toast.setAttribute("data-toast",`toastIndex${toastIndex}`),toast.setAttribute("data-delay","3500"),toast.setAttribute("role","alert"),toast.setAttribute("aria-atomic","true"),toast.setAttribute("aria-live","assertive"),toast.innerHTML=`\n        <div class="toast-header">\n            <div class="icon-md mr-2"><i data-feather="bell"></i></div>\n            <strong class="mr-auto">${title}</strong>\n            <small class="text-muted d-none">just now</small>\n            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">\n                <div class="icon-md"><i data-feather="x"></i></div>\n            </button>\n        </div>\n        <div class="toast-body">\n            ${message}\n        </div>\n    `,toast.addEventListener("animationend",(function(){toast.classList.add("animated","fadeOutRight","delay-3s")})),document.querySelector("#toastContainer").appendChild(toast),feather.replace(),$(`[data-toast="toastIndex${toastIndex}"]`).toast("show")}function addAdmin(){createToast("Beheerders","Beheerder werd toegevoegd")}function goSudo(input){1==input?createCookie("sudo",!0):0==input&&eraseCookie("sudo")}null!==cookieSudo?(console.log("sudo mode"),body.setAttribute("data-admin-login",!0)):console.log("not logged in"),initiate();